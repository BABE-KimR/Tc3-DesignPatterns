<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="Tp10" Id="{dfe30bff-bbfc-4234-8afb-8bdc60fd18a1}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'no_explicit_call' := 'Tp10 is a CLASS and must be accessed using methods or properties'}
FUNCTION_BLOCK Tp10 IMPLEMENTS I_CyclicCall
VAR
	buttons			AT%I*		: ARRAY[0..NOOFCOMMANDS-1] OF BOOL;
	risingTrigger				: ARRAY[0..NOOFCOMMANDS-1] OF R_TRIG;

	commands					: ARRAY[0..NOOFCOMMANDS-1] OF I_Command;
	noCommand					: NoCommand;	// Default command containing NO code in Execute
END_VAR
VAR CONSTANT
	NOOFCOMMANDS				: INT := 10;
END_VAR
/// https://fixsus.be/hardware/tp10]]></Declaration>
    <Implementation>
      <ST><![CDATA[
// The body of a class must not be used for code.  
// Cyclic code should be called from a method if needed. 
]]></ST>
    </Implementation>
    <Method Name="CyclicCall" Id="{930c1ffb-51dd-4f1a-a451-34f82663f178}">
      <Declaration><![CDATA[METHOD CyclicCall

VAR
	i: INT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[// Check the pushbuttons
FOR i := 0 TO NOOFCOMMANDS -1 DO
	risingTrigger[i](CLK:=buttons[i]);
	// Issue command if the button was pressed
	IF risingTrigger[i].Q		THEN
		commands[i].Execute();		
	END_IF
END_FOR

]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{24e5ebd2-2a71-4700-a9eb-28c526aa538a}">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
END_VAR
VAR
	i					: INT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[// Initialize the command buttons to NOCommand 
FOR i := 0 TO NOOFCOMMANDS - 1 DO
	Commands[i] := THIS^.noCommand;		// basic initialization of a button, avoids the need of checking for a valid command in the code, just does nothing when pressed
END_FOR
]]></ST>
      </Implementation>
    </Method>
    <Method Name="RemoveCommand" Id="{9fda3b4b-82f5-4455-a94c-2f55a4272ac4}">
      <Declaration><![CDATA[METHOD RemoveCommand
VAR_INPUT
	slot					: INT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[// Check if the slot no is valid
IF slot >=0 AND slot < NOOFCOMMANDS THEN 
	commands[slot] := noCommand;	
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="SetCommand" Id="{98b0e454-66ea-47b7-91f5-905233d50fef}">
      <Declaration><![CDATA[METHOD SetCommand
VAR_INPUT
	slot					: INT;
	command					: I_Command;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[// Check if the slot no is valid
IF slot >=0 AND slot < NOOFCOMMANDS THEN 
	commands[slot] := command;	
END_IF]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>